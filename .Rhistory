rm(list=ls())
data(discharge_data, package = "healthcare.antitrust")
discharge_data$adm <- 1
th <- 15
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("zip3")
layers <- list(list2, list3)
outList <- cell_defn(discharge_data,th,layers)
data(discharge_data, package = "healthcare.antitrust")
discharge_data$adm <- 1
th <- 15
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("zip3")
layers <- list(list2, list3)
D <- discharge_data
s_min <- th
cc <- c("cell","cell_type")
# Create ID numbers for cells based on layers of decreasing refinement
L <- length(layers)      # Number of layers
cell_def <- lapply(layers, function(x){unique(subset(D, select = x))})
for (l in 1:L) {
cell_def[[l]]$cell <- cumsum((array(1,nrow(cell_def[[l]]))))
cell_def[[l]]$cell_type <- l
}
# Starting with the most refined layer, merge with discharge data.
# Use this cell defn for cells with at least `s_min' events.
# For cells with fewer than `s_min', go on to next level.
cell1<-cell_def[[1]]; list1<-layers[[1]]
# First Layer
DD <- merge(D,cell1,by=(list1))
tmp <- aggregate(DD$adm,by=list(DD$cell,DD$cell_type),sum)
names(tmp) <- c(cc,"cell_tot")
DD <- merge(DD,tmp,by=cc)
D0 <- subset(DD,cell_tot >= s_min)
DD <- subset(DD,cell_tot < s_min)
print(paste0("Layer ","1",": ",nrow(D0)," obs allocated", sep = ""))
j <- 2
cellj<-cell_def[[j]];listj<-layers[[j]]
DD[,cbind(cc[1],cc[2],"cell_tot")] <- list(NULL)
DD <- merge(DD,cellj,by=(listj))
tmp <- aggregate(DD$adm,by=list(DD$cell,DD$cell_type),sum)
names(tmp) <- c(cc,"cell_tot")
DD <- merge(DD,tmp,by=cc)
nrow(DD)
D0 <- rbind(D0,subset(DD,cell_tot >= s_min))
nrow(D0)
nrow(DD)
devtools::load_all()
rm(list=ls())
data(discharge_data, package = "healthcare.antitrust")
discharge_data$adm <- 1
th <- 15
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("zip3")
layers <- list(list2, list3)
outList <- cell_defn(discharge_data,th,layers)
devtools::load_all()
rm(list=ls())
data(discharge_data, package = "healthcare.antitrust")
discharge_data$adm <- 1
th <- 15
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("zip3")
layers <- list(list2, list3)
outList <- cell_defn(discharge_data,th,layers)
devtools::load_all()
rm(list=ls())
data(discharge_data, package = "healthcare.antitrust")
discharge_data$adm <- 1
th <- 15
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("zip3")
layers <- list(list2, list3)
outList <- cell_defn(discharge_data,th,layers)
discharge_data$adm <- 1
th <- 25
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("zip3")
layers <- list(list2, list3)
outList <- cell_defn(discharge_data,th,layers)
th <- 25
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
layers <- list(list2, list3)
outList <- cell_defn(discharge_data,th,layers)
rm(list=ls())
data(discharge_data, package = "healthcare.antitrust")
discharge_data$adm <- 1
th <- 25
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
735+465+129
rm(list=ls())
data(discharge_data, package = "healthcare.antitrust")
discharge_data$adm <- 1
th <- 25
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
D <- discharge_data
s_min <- th
cc <- c("cell","cell_type")
# Create ID numbers for cells based on layers of decreasing refinement
L <- length(layers)      # Number of layers
cell_def <- lapply(layers, function(x){unique(subset(D, select = x))})
for (l in 1:L) {
cell_def[[l]]$cell <- cumsum((array(1,nrow(cell_def[[l]]))))
cell_def[[l]]$cell_type <- l
}
# Starting with the most refined layer, merge with discharge data.
# Use this cell defn for cells with at least `s_min' events.
# For cells with fewer than `s_min', go on to next level.
cell1<-cell_def[[1]]; list1<-layers[[1]]
# First Layer
DD <- merge(D,cell1,by=(list1))
tmp <- aggregate(DD$adm,by=list(DD$cell,DD$cell_type),sum)
names(tmp) <- c(cc,"cell_tot")
DD <- merge(DD,tmp,by=cc)
View(tmp)
nrow(DD)
View(DD)
D0 <- subset(DD,cell_tot >= s_min)
DD <- subset(DD,cell_tot < s_min)
nrow(DD)
nrow(D0)
nrow(D0)+nrow(DD)
print(paste0("Layer ","1",": ",nrow(D0)," obs allocated", sep = ""))
j <- 2
cellj<-cell_def[[j]];listj<-layers[[j]]
DD[,cbind(cc[1],cc[2],"cell_tot")] <- list(NULL)
DD <- merge(DD,cellj,by=(listj))
tmp <- aggregate(DD$adm,by=list(DD$cell,DD$cell_type),sum)
names(tmp) <- c(cc,"cell_tot")
DD <- merge(DD,tmp,by=cc)
nrow(DD)
nrow(subset(DD,cell_tot >= s_min))
nrow(subset(DD,cell_tot < s_min))
rm(list=ls())
devtools::load_all()
data(discharge_data, package = "healthcare.antitrust")
discharge_data$adm <- 1
th <- 25
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
735+336+129
D0 <- as.data.frame(outList[1])
print(nrow(D0))
print(nrow(discharge_data))
D0$party_ind <- 0
D0$party_ind[D0$hosp_id==1] <- 1
D0$party_ind[D0$hosp_id==2] <- 1
D0$party_ind[D0$hosp_id==5] <- 1
out <- div_calc(D0)
print(out)
rm(list=ls())
data(discharge_data, package = "healthcare.antitrust")
discharge_data$adm <- 1
th <- 15
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
#layers <- list(list2, list3, list4)
layers <- list(list2, list4)
outList <- cell_defn(discharge_data,th,layers)
D0 <- as.data.frame(outList[1])
print(nrow(D0))
print(nrow(discharge_data))
D0$party_ind <- 0
D0$party_ind[D0$hosp_id==1] <- 1
D0$party_ind[D0$hosp_id==2] <- 1
D0$party_ind[D0$hosp_id==5] <- 1
out <- div_calc(D0)
print(out)
discharge_data$adm <- 1
th <- 25
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
D0 <- as.data.frame(outList[1])
print(nrow(D0))
print(nrow(discharge_data))
D0$party_ind <- 0
D0$party_ind[D0$hosp_id==1] <- 1
D0$party_ind[D0$hosp_id==2] <- 1
D0$party_ind[D0$hosp_id==5] <- 1
out <- div_calc(D0)
print(out)
rm(list=ls())
data(discharge_data, package = "healthcare.antitrust")
discharge_data$adm <- 1
th <- 25
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
th <- 45
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
th <- 35
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
th <- 40
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
th <- 39
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
th <- 38
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
th <- 40
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
rm(list=ls())
data(discharge_data, package = "healthcare.antitrust")
discharge_data$adm <- 1
th <- 40
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
D <- discharge_data
s_min <- th
cc <- c("cell","cell_type")
# Create ID numbers for cells based on layers of decreasing refinement
L <- length(layers)      # Number of layers
cell_def <- lapply(layers, function(x){unique(subset(D, select = x))})
for (l in 1:L) {
cell_def[[l]]$cell <- cumsum((array(1,nrow(cell_def[[l]]))))
cell_def[[l]]$cell_type <- l
}
# Starting with the most refined layer, merge with discharge data.
# Use this cell defn for cells with at least `s_min' events.
# For cells with fewer than `s_min', go on to next level.
cell1<-cell_def[[1]]; list1<-layers[[1]]
DD <- merge(D,cell1,by=(list1))
tmp <- aggregate(DD$adm,by=list(DD$cell,DD$cell_type),sum)
rm(list=ls())
data(discharge_data, package = "healthcare.antitrust")
discharge_data$adm <- 1
th <- 40
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
data(discharge_data, package = "healthcare.antitrust")
discharge_data$adm <- 1
th <- 40
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list4)
outList <- cell_defn(discharge_data,th,layers)
th <- 45
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list4)
outList <- cell_defn(discharge_data,th,layers)
th <- 50
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list4)
outList <- cell_defn(discharge_data,th,layers)
data(discharge_data, package = "healthcare.antitrust")
discharge_data$adm <- 1
th <- 40
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
rm(list=ls())
data(discharge_data, package = "healthcare.antitrust")
discharge_data$adm <- 1
th <- 40
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
D <- discharge_data
s_min <- th
cc <- c("cell","cell_type")
# Create ID numbers for cells based on layers of decreasing refinement
L <- length(layers)      # Number of layers
cell_def <- lapply(layers, function(x){unique(subset(D, select = x))})
for (l in 1:L) {
cell_def[[l]]$cell <- cumsum((array(1,nrow(cell_def[[l]]))))
cell_def[[l]]$cell_type <- l
}
# Starting with the most refined layer, merge with discharge data.
# Use this cell defn for cells with at least `s_min' events.
# For cells with fewer than `s_min', go on to next level.
cell1<-cell_def[[1]]; list1<-layers[[1]]
# First Layer
DD <- merge(D,cell1,by=(list1))
tmp <- aggregate(DD$adm,by=list(DD$cell,DD$cell_type),sum)
names(tmp) <- c(cc,"cell_tot")
DD <- merge(DD,tmp,by=cc)
D0 <- subset(DD,cell_tot >= s_min)
DD <- subset(DD,cell_tot < s_min)
print(paste0("Layer ","1",": ",nrow(D0)," obs allocated", sep = ""))
j <- 2
cellj<-cell_def[[j]];listj<-layers[[j]]
DD[,cbind(cc[1],cc[2],"cell_tot")] <- list(NULL)
DD <- merge(DD,cellj,by=(listj))
tmp <- aggregate(DD$adm,by=list(DD$cell,DD$cell_type),sum)
names(tmp) <- c(cc,"cell_tot")
DD <- merge(DD,tmp,by=cc)
matched   <- subset(DD,cell_tot >= s_min)
nomatched <- subset(DD,cell_tot < s_min)
print(paste0("Layer ",j,": ",nrow(matched)," obs allocated", sep = ""))
D0 <- rbind(D0,matched)
DD <- nomatched
j <- 3
cellj<-cell_def[[j]];listj<-layers[[j]]
DD[,cbind(cc[1],cc[2],"cell_tot")] <- list(NULL)
DD <- merge(DD,cellj,by=(listj))
tmp <- aggregate(DD$adm,by=list(DD$cell,DD$cell_type),sum)
View(DD)
D <- discharge_data
s_min
cc <- c("cell","cell_type")
# Create ID numbers for cells based on layers of decreasing refinement
L <- length(layers)      # Number of layers
cell_def <- lapply(layers, function(x){unique(subset(D, select = x))})
for (l in 1:L) {
cell_def[[l]]$cell <- cumsum((array(1,nrow(cell_def[[l]]))))
cell_def[[l]]$cell_type <- l
}
# Starting with the most refined layer, merge with discharge data.
# Use this cell defn for cells with at least `s_min' events.
# For cells with fewer than `s_min', go on to next level.
cell1<-cell_def[[1]]; list1<-layers[[1]]
# First Layer
DD <- merge(D,cell1,by=(list1))
tmp <- aggregate(DD$adm,by=list(DD$cell,DD$cell_type),sum)
names(tmp) <- c(cc,"cell_tot")
DD <- merge(DD,tmp,by=cc)
D0 <- subset(DD,cell_tot >= s_min)
DD <- subset(DD,cell_tot < s_min)
print(paste0("Layer ","1",": ",nrow(D0)," obs allocated", sep = ""))
j <- 2
cellj<-cell_def[[j]];listj<-layers[[j]]
DD[,cbind(cc[1],cc[2],"cell_tot")] <- list(NULL)
DD <- merge(DD,cellj,by=(listj))
tmp <- aggregate(DD$adm,by=list(DD$cell,DD$cell_type),sum)
names(tmp) <- c(cc,"cell_tot")
DD <- merge(DD,tmp,by=cc)
matched   <- subset(DD,cell_tot >= s_min)
nomatched <- subset(DD,cell_tot < s_min)
print(paste0("Layer ",j,": ",nrow(matched)," obs allocated", sep = ""))
D0 <- rbind(D0,matched)
DD <- nomatched
j <- 3
rm(list=ls())
devtools::load_all()
data(discharge_data, package = "healthcare.antitrust")
discharge_data$adm <- 1
th <- 40
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
rm(list=ls())
data(discharge_data, package = "healthcare.antitrust")
discharge_data$adm <- 1
th <- 40
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
D <- discharge_data
s_min <- th
cc <- c("cell","cell_type")
# Create ID numbers for cells based on layers of decreasing refinement
L <- length(layers)      # Number of layers
cell_def <- lapply(layers, function(x){unique(subset(D, select = x))})
for (l in 1:L) {
cell_def[[l]]$cell <- cumsum((array(1,nrow(cell_def[[l]]))))
cell_def[[l]]$cell_type <- l
}
# Starting with the most refined layer, merge with discharge data.
# Use this cell defn for cells with at least `s_min' events.
# For cells with fewer than `s_min', go on to next level.
cell1<-cell_def[[1]]; list1<-layers[[1]]
# First Layer
DD <- merge(D,cell1,by=(list1))
tmp <- aggregate(DD$adm,by=list(DD$cell,DD$cell_type),sum)
names(tmp) <- c(cc,"cell_tot")
DD <- merge(DD,tmp,by=cc)
D0 <- subset(DD,cell_tot >= s_min)
DD <- subset(DD,cell_tot < s_min)
print(paste0("Layer ","1",": ",nrow(D0)," obs allocated", sep = ""))
j <- 2
L
dim(DD)
rm(list=ls())
devtools::load_all()
data(discharge_data, package = "healthcare.antitrust")
discharge_data$adm <- 1
th <- 40
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
th <- 25
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
th <- 25
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip5")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
th <- 25
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip5")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
th <- 25
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
th <- 25
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip5")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
th <- 25
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list4, list3)
outList <- cell_defn(discharge_data,th,layers)
735+465
devtools::build()
devtools::install()
