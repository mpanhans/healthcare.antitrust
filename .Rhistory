discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
th <- 25
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip5")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
th <- 25
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list4, list3)
outList <- cell_defn(discharge_data,th,layers)
735+465
devtools::build()
devtools::install()
load_all()
devtools::load_all()
package?healthcare.antitrust
?div_calc
package?dplyr
devtools::document()
package?healthcare.antitrust
devtools::load_all()
package?healthcare.antitrust
devtools::document()
?div_calc
package?healthcare.antitrust
?discharge_data
?cell_defn
package?healthcare.antitrust
?help
package?healthcare.antitrust
?cell_defn
devtools::document()
?cell_defn
package?healthcare.antitrust
usethis::use_package_doc()
devtools::document()
package?healthcare.antitrust
package?dplyr
devtools::document()
package?healthcare.antitrust
devtools::document()
package?healthcare.antitrust
package?healthcare.antitrust-package
?healthcare.antitrust-package
?healthcare.antitrust
?dplyr
package?dplyr
package?healthcare.antitrust
package?healthcareantitrust
?healthcare.antitrust
devtools::document()
?healthcare.antitrust
package?dplyr
devtools::document()
?div_calc
package?healthcare.antitrust
?healthcare.antitrust
devtools::document()
?div_calc
?healthcare.antitrust
package?healthcare.antitrust
devtools::document()
?healthcare.antitrust
package?dplyr
package?healthcare.antitrust
devtools::load_all()
?div_calc
?healthcare.antitrust
package?healthcare.antitrust
?roxygen2
package?roxygen2
vignette("rd", package = "roxygen2")
devtools::document()
?healthcare.antitrust
package?healthcare.antitrust
devtools::document()
?healthcare.antitrust
devtools::build()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
data(discharge_data, package = "healthcare.antitrust")
library(healthcare.antitrust)
data(discharge_data, package = "healthcare.antitrust")
data(discharge_data, package = "healthcare.antitrust")
"hosp_id" %in% names(discharge_data)
"hosp_id2" %in% names(discharge_data)
N <- 1200
N_drg <- 4
drg <- sample(N_drg, size = N, replace = TRUE)
age <- sample(c(30,40,50,60), size = N, replace = TRUE)
zip5 <- sample(c(53130,53131,53132), size = N, replace = TRUE, prob = c(.4,.4,.2))
H <- 8
K <- 3
# calculate utilities
util = matrix(0, nrow = N, ncol = H)
drg_val <- matrix(runif(N_drg*H) , nrow = N_drg, ncol = H)
for (h in 1:H) {
util[,h] <-  drg_val[drg,h] + runif(N)
}
hosp_id <- max.col(util)
discharge_data <- data.frame(drg, age, zip5, hosp_id)
discharge_data$Hospital <- paste0("hospital ",hosp_id)
discharge_data$sys_id <- hosp_id
discharge_data$sys_id[discharge_data$hosp_id==2] <- 1
discharge_data$sys_id[discharge_data$hosp_id==4] <- 3
discharge_data$System <- paste0("system ",discharge_data$sys_id)
#save(discharge_data,file="data/discharge_data.RData")
usethis::use_data(discharge_data, overwrite = TRUE)
tabulate(discharge_data$hosp_id)
discharge_data %>%
group_by(drg,age,zip5) %>%
summarize(freq = n())
library(dplyr)
N <- 1200
N_drg <- 4
drg <- sample(N_drg, size = N, replace = TRUE)
age <- sample(c(30,40,50,60), size = N, replace = TRUE)
zip5 <- sample(c(53130,53131,53132), size = N, replace = TRUE, prob = c(.4,.4,.2))
H <- 8
K <- 3
# calculate utilities
util = matrix(0, nrow = N, ncol = H)
drg_val <- matrix(runif(N_drg*H) , nrow = N_drg, ncol = H)
for (h in 1:H) {
util[,h] <-  drg_val[drg,h] + runif(N)
}
hosp_id <- max.col(util)
discharge_data <- data.frame(drg, age, zip5, hosp_id)
discharge_data$Hospital <- paste0("hospital ",hosp_id)
discharge_data$sys_id <- hosp_id
discharge_data$sys_id[discharge_data$hosp_id==2] <- 1
discharge_data$sys_id[discharge_data$hosp_id==4] <- 3
discharge_data$System <- paste0("system ",discharge_data$sys_id)
#save(discharge_data,file="data/discharge_data.RData")
usethis::use_data(discharge_data, overwrite = TRUE)
tabulate(discharge_data$hosp_id)
discharge_data %>%
group_by(drg,age,zip5) %>%
summarize(freq = n())
if ("cell" %in% names(df) = FALSE) {warning('Variable "cell" required in input dataset')}
if (!"cell" %in% names(df)) {warning('Variable "cell" required in input dataset')}
if (!"hosp_id" %in% names(df)) {warning('Variable "hosp_id" required in input dataset')}
if (!"cell" %in% names(D)) {warning('Variable "cell" required in input dataset')}
if (!"hosp_id" %in% names(D)) {warning('Variable "hosp_id" required in input dataset')}
D <- discharge_data
if (!"cell" %in% names(D)) {warning('Variable "cell" required in input dataset')}
if (!"hosp_id" %in% names(D)) {warning('Variable "hosp_id" required in input dataset')}
if (!"cell" %in% names(D)) {warning('Variable "cell" required in input dataset'); stop()}
if (!"hosp_id" %in% names(D)) {warning('Variable "hosp_id" required in input dataset');
stop()}
if (!"cell" %in% names(D)) {warning('Variable "cell" required in input dataset'); stop()}
if (!"hosp_id" %in% names(D)) {warning('Variable "hosp_id" required in input dataset'); stop()}
data(discharge_data, package = "healthcare.antitrust")
library(healthcare.antitrust)
data(discharge_data, package = "healthcare.antitrust")
devtools::load_all()
data(discharge_data, package = "healthcare.antitrust")
library(dplyr)
N <- 1200
N_drg <- 4
drg <- sample(N_drg, size = N, replace = TRUE)
age <- sample(c(30,40,50,60), size = N, replace = TRUE)
zip5 <- sample(c(53130,53131,53132), size = N, replace = TRUE, prob = c(.4,.4,.2))
H <- 8
K <- 3
# calculate utilities
util = matrix(0, nrow = N, ncol = H)
drg_val <- matrix(runif(N_drg*H) , nrow = N_drg, ncol = H)
for (h in 1:H) {
util[,h] <-  drg_val[drg,h] + runif(N)
}
hosp_id <- max.col(util)
discharge_data <- data.frame(drg, age, zip5, hosp_id)
discharge_data$hospital <- paste0("Hospital ",hosp_id)
discharge_data$sys_id <- hosp_id
discharge_data$sys_id[discharge_data$hosp_id==2] <- 1
discharge_data$sys_id[discharge_data$hosp_id==4] <- 3
discharge_data$system <- paste0("System ",discharge_data$sys_id)
#save(discharge_data,file="data/discharge_data.RData")
usethis::use_data(discharge_data, overwrite = TRUE)
tabulate(discharge_data$hosp_id)
discharge_data %>%
group_by(drg,age,zip5) %>%
summarize(freq = n())
rm(list=ls())
devtools::load_all()
data(discharge_data, package = "healthcare.antitrust")
devtools::document()
?div_calc
rm(list=ls())
devtools::build_manual()
devtools::build()
devtools::build_manual()
devtools::build()
devtools::build_manual()
devtools::build()
devtools::build()
devtools::build_manual()
devtools::document()
devtools::build_manual()
devtools::document()
devtools::build_manual()
vignette("semipar_example",package = "healthcare.antitrust")
cc <- 55
cc
print("Total",cc)
print("Total","cc")
print(paste0("Total",cc))
print(paste0("Total ",cc))
devtools::build()
library("healthcare.antitrust", lib.loc="/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
devtools::build()
install.packages("~/Projects/R_packages/healthcare.antitrust_0.1.1.tar.gz", repos = NULL, type = "source")
devtools::build()
devtools::build()
devtools::load_all()
devtools::load_all()
data(discharge_data, package = "healthcare.antitrust")
discharge_data$adm <- 1
th <- 25
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
###### works with layers that allocate no obs
th <- 25
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip5")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
###### works with layers run after all cells allocated
th <- 25
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list4, list3)
outList <- cell_defn(discharge_data,th,layers)
########################
###### Testing div_calc
########################
D0 <- as.data.frame(outList[1])
print(nrow(D0))
print(nrow(discharge_data))
D0$party_ind <- 0
D0$party_ind[D0$hosp_id==1] <- 1
D0$party_ind[D0$hosp_id==2] <- 1
D0$party_ind[D0$hosp_id==5] <- 1
out <- div_calc(D0)
print(out)
sum(out$div_from_1, na.rm = TRUE)
View(D0)
max(D0$cell)
table(D0$hosp_id)
D0$cell[D0$hosp_id == 3] <- 999
View(D0)
View(D0)
D0$party_ind[D0$hosp_id==3] <- 1
out <- div_calc(D0)
rm(list=ls())
data(discharge_data, package = "healthcare.antitrust")
discharge_data$adm <- 1
########################
###### Testing cell_defn
########################
###### works with several layers of any name
th <- 25
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
###### works with layers that allocate no obs
th <- 25
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip5")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
###### works with layers run after all cells allocated
th <- 25
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list4, list3)
outList <- cell_defn(discharge_data,th,layers)
########################
###### Testing div_calc
########################
D0 <- as.data.frame(outList[1])
print(nrow(D0))
print(nrow(discharge_data))
D0$party_ind <- 0
D0$party_ind[D0$hosp_id==1] <- 1
D0$party_ind[D0$hosp_id==2] <- 1
D0$party_ind[D0$hosp_id==5] <- 1
out <- div_calc(D0)
print(out)
sum(out$div_from_1, na.rm = TRUE)
table(D0$cell[D0$hosp_id == 3])
D0$cell[D0$hosp_id == 3 & D0$cell == 30] <- 999
D0$party_ind[D0$hosp_id==3] <- 1
out <- div_calc(D0)
out <- div_calc(D0, dropDegenerateCell = FALSE)
install.packages("~/Projects/R_packages/healthcare.antitrust_0.1.1.tar.gz", repos = NULL, type = "source")
devtools::build()
devtools::build_manual()
devtools::load_all()
data(discharge_data, package = "healthcare.antitrust")
discharge_data$adm <- 1
th <- 25
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
###### works with layers that allocate no obs
th <- 25
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip5")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
View(outList)
D0 <- as.data.frame(outList[1])
test <- outlist[2]
test <- outList[2]
View(test)
test <- outList[1]
View(test)
D0 <- as.data.frame(outList[1])
print(nrow(D0))
print(nrow(discharge_data))
D0$party_ind <- 0
D0$party_ind[D0$hosp_id==1] <- 1
D0$party_ind[D0$hosp_id==2] <- 1
D0$party_ind[D0$hosp_id==5] <- 1
out <- div_calc(D0)
View(out)
D <- D0
dropDegenerateCell = TRUE
check <- unique(subset(D,select=c(hosp_id,hospital)))
if (length(unique(check$hosp_id)) != length(check$hosp_id)) {warning('Error: hosp_id associated with multiple hospital names')}
#if (length(unique(check$hospital)) != length(check$hospital)) {warning('Error: hospital name associated with multiple hosp_ids')}
if (!"cell" %in% names(D)) {warning('Variable "cell" required in input dataset'); stop()}
if (!"hosp_id" %in% names(D)) {warning('Variable "hosp_id" required in input dataset'); stop()}
if (!"hospital" %in% names(D)) {warning('Variable "hospital" required in input dataset'); stop()}
if (!"sys_id" %in% names(D)) {warning('Variable "sys_id" required in input dataset'); stop()}
#if (!"system" %in% names(D)) {warning('Variable "system" required in input dataset'); stop()}
if (!"party_ind" %in% names(D)) {warning('Variable "party_ind" required in input dataset'); stop()}
if (!"adm" %in% names(D)) {warning('Variable "adm" required in input dataset'); stop()}
iter <- 0
D$party_sys_id <- D$party_ind*D$sys_id
party_sys_list <- unique(D$party_sys_id[D$party_sys_id > 0])
party_sys_list
m <- 1
y_hosp_cell = aggregate(D$adm,by=list(D$cell,D$hosp_id,D$hospital,D$party_sys_id),sum)
names(y_hosp_cell) <- c("cell","hosp_id","hospital","party_sys_id","N_h")
View(y_hosp_cell)
y_hosp_cell$N <- ave(y_hosp_cell$N_h,y_hosp_cell$cell, FUN = sum)
y_hosp_cell$share_h <- y_hosp_cell$N_h/y_hosp_cell$N
y_hosp_cell$share_m <- ave(y_hosp_cell$share_h,y_hosp_cell$cell, y_hosp_cell$party_sys_id, FUN = sum)
y_hosp_cell$share_m[y_hosp_cell$party_sys_id != m] <- 0
y_hosp_cell$share_m <- ave(y_hosp_cell$share_m,y_hosp_cell$cell, FUN = max)
y_hosp_cell$share_h[y_hosp_cell$party_sys_id == m] <- 0 # set share to zero for system hospitals
y_hosp_cell$div <- y_hosp_cell$share_h/(1-y_hosp_cell$share_m)
# Calculate predicted hospital-cell admissions after hospital k exclusion
system_hosp <- sort(unique(y_hosp_cell$hosp_id[y_hosp_cell$party_sys_id == m]))
system_hosp
k <- 1
print(paste0("Hosp Id: ", k))
iter <- iter + 1
iter
y_hosp_cell$N_k <- 0
y_hosp_cell$N_k[y_hosp_cell$hosp_id == k] <- y_hosp_cell$N_h[y_hosp_cell$hosp_id == k]
y_hosp_cell$N_k <- ave(y_hosp_cell$N_k,y_hosp_cell$cell, FUN = max)
y_hosp_cell$N_h_predict <- y_hosp_cell$N_h + y_hosp_cell$N_k*y_hosp_cell$div
y_hosp_cell$N_h_predict[y_hosp_cell$party_sys_id == m] <- 0
y_hosp = aggregate(D$adm,by=list(D$hosp_id,D$hospital,D$party_sys_id,D$sys_id),sum)
names(y_hosp) <- c("hosp_id","hospital","party_sys_id","sys_id","N_h")
y_hosp$N_k <- 0
y_hosp$N_k[y_hosp$hosp_id == k] <- y_hosp$N_h[y_hosp$hosp_id == k]
y_hosp$N_k <- max(y_hosp$N_k)
temp <- aggregate(y_hosp_cell$N_h_predict,by=list(y_hosp_cell$hosp_id),sum)
names(temp) <- c("hosp_id","N_h_predict")
y_hosp <- merge(y_hosp,temp)
if (dropDegenerateCell == FALSE) {
y_hosp$div <- (y_hosp$N_h_predict-y_hosp$N_h)/y_hosp$N_k
}
if (dropDegenerateCell == TRUE) {
y_hosp$movers <- y_hosp$N_h_predict - y_hosp$N_h
y_hosp$N_k_alt <- sum(y_hosp$movers[y_hosp$movers>0])
y_hosp$div <- (y_hosp$N_h_predict-y_hosp$N_h)/y_hosp$N_k_alt
}
y_hosp$div[y_hosp$party_sys_id == m] <- NA
degenlist <- y_hosp_cell$cell[is.na(y_hosp_cell$div) & y_hosp_cell$hosp_id == k]
if (length(degenlist) > 0) {
print("Note the following cells are degenerate:")
print(degenlist)
totdiv <- sum(y_hosp$div, na.rm = TRUE)
print(paste0("Total Diversion: ",totdiv))
}
if (iter == 1) {out <- subset(y_hosp, select=c(hosp_id,hospital,party_sys_id,N_h))}
View(out)
if (iter == 1) {out <- subset(y_hosp, select=c(hosp_id,hospital,party_sys_id,sys_id,N_h))}
View(out)
out[,paste0("div_from_",k)] <- y_hosp$div
View(out)
out$party_sys_id[out$party_sys_id == 0] <- NA
out <- out[order(-party_sys_id,-sys_id,-hosp_id),]
out <- out[order(party_sys_id,-sys_id,-hosp_id),]
out <- out[order(-out$party_sys_id,-out$sys_id,-out$hosp_id),]
out <- out[order(out$party_sys_id,out$sys_id,out$hosp_id),]
devtools::load_all()
# rm(list=ls())
data(discharge_data, package = "healthcare.antitrust")
discharge_data$adm <- 1
########################
###### Testing cell_defn
########################
###### works with several layers of any name
th <- 25
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
###### works with layers that allocate no obs
th <- 25
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip5")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
###### works with layers run after all cells allocated
th <- 25
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list4, list3)
outList <- cell_defn(discharge_data,th,layers)
########################
###### Testing div_calc
########################
D0 <- as.data.frame(outList[1])
print(nrow(D0))
print(nrow(discharge_data))
D0$party_ind <- 0
D0$party_ind[D0$hosp_id==1] <- 1
D0$party_ind[D0$hosp_id==2] <- 1
D0$party_ind[D0$hosp_id==5] <- 1
out <- div_calc(D0)
View(out)
print(out)
sum(out$div_from_1, na.rm = TRUE)
devtools::load_all()
data(discharge_data, package = "healthcare.antitrust")
discharge_data$adm <- 1
th <- 25
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
th <- 25
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip5")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
th <- 25
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list4, list3)
outList <- cell_defn(discharge_data,th,layers)
D0 <- as.data.frame(outList[1])
print(nrow(D0))
print(nrow(discharge_data))
test <- outList$dataset
View(test)
print(nrow(test))
D0 <- outList$dataset
print(nrow(D0))
print(nrow(discharge_data))
