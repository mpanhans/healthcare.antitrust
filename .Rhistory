outList <- cell_defn(discharge_data,th,layers)
D0 <- as.data.frame(outList[1])
print(nrow(D0))
print(nrow(discharge_data))
D0$party_ind <- 0
D0$party_ind[D0$hosp_id==1] <- 1
D0$party_ind[D0$hosp_id==2] <- 1
D0$party_ind[D0$hosp_id==5] <- 1
out <- div_calc(D0)
print(out)
discharge_data$adm <- 1
th <- 25
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
D0 <- as.data.frame(outList[1])
print(nrow(D0))
print(nrow(discharge_data))
D0$party_ind <- 0
D0$party_ind[D0$hosp_id==1] <- 1
D0$party_ind[D0$hosp_id==2] <- 1
D0$party_ind[D0$hosp_id==5] <- 1
out <- div_calc(D0)
print(out)
rm(list=ls())
data(discharge_data, package = "healthcare.antitrust")
discharge_data$adm <- 1
th <- 25
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
th <- 45
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
th <- 35
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
th <- 40
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
th <- 39
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
th <- 38
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
th <- 40
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
rm(list=ls())
data(discharge_data, package = "healthcare.antitrust")
discharge_data$adm <- 1
th <- 40
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
D <- discharge_data
s_min <- th
cc <- c("cell","cell_type")
# Create ID numbers for cells based on layers of decreasing refinement
L <- length(layers)      # Number of layers
cell_def <- lapply(layers, function(x){unique(subset(D, select = x))})
for (l in 1:L) {
cell_def[[l]]$cell <- cumsum((array(1,nrow(cell_def[[l]]))))
cell_def[[l]]$cell_type <- l
}
# Starting with the most refined layer, merge with discharge data.
# Use this cell defn for cells with at least `s_min' events.
# For cells with fewer than `s_min', go on to next level.
cell1<-cell_def[[1]]; list1<-layers[[1]]
DD <- merge(D,cell1,by=(list1))
tmp <- aggregate(DD$adm,by=list(DD$cell,DD$cell_type),sum)
rm(list=ls())
data(discharge_data, package = "healthcare.antitrust")
discharge_data$adm <- 1
th <- 40
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
data(discharge_data, package = "healthcare.antitrust")
discharge_data$adm <- 1
th <- 40
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list4)
outList <- cell_defn(discharge_data,th,layers)
th <- 45
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list4)
outList <- cell_defn(discharge_data,th,layers)
th <- 50
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list4)
outList <- cell_defn(discharge_data,th,layers)
data(discharge_data, package = "healthcare.antitrust")
discharge_data$adm <- 1
th <- 40
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
rm(list=ls())
data(discharge_data, package = "healthcare.antitrust")
discharge_data$adm <- 1
th <- 40
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
D <- discharge_data
s_min <- th
cc <- c("cell","cell_type")
# Create ID numbers for cells based on layers of decreasing refinement
L <- length(layers)      # Number of layers
cell_def <- lapply(layers, function(x){unique(subset(D, select = x))})
for (l in 1:L) {
cell_def[[l]]$cell <- cumsum((array(1,nrow(cell_def[[l]]))))
cell_def[[l]]$cell_type <- l
}
# Starting with the most refined layer, merge with discharge data.
# Use this cell defn for cells with at least `s_min' events.
# For cells with fewer than `s_min', go on to next level.
cell1<-cell_def[[1]]; list1<-layers[[1]]
# First Layer
DD <- merge(D,cell1,by=(list1))
tmp <- aggregate(DD$adm,by=list(DD$cell,DD$cell_type),sum)
names(tmp) <- c(cc,"cell_tot")
DD <- merge(DD,tmp,by=cc)
D0 <- subset(DD,cell_tot >= s_min)
DD <- subset(DD,cell_tot < s_min)
print(paste0("Layer ","1",": ",nrow(D0)," obs allocated", sep = ""))
j <- 2
cellj<-cell_def[[j]];listj<-layers[[j]]
DD[,cbind(cc[1],cc[2],"cell_tot")] <- list(NULL)
DD <- merge(DD,cellj,by=(listj))
tmp <- aggregate(DD$adm,by=list(DD$cell,DD$cell_type),sum)
names(tmp) <- c(cc,"cell_tot")
DD <- merge(DD,tmp,by=cc)
matched   <- subset(DD,cell_tot >= s_min)
nomatched <- subset(DD,cell_tot < s_min)
print(paste0("Layer ",j,": ",nrow(matched)," obs allocated", sep = ""))
D0 <- rbind(D0,matched)
DD <- nomatched
j <- 3
cellj<-cell_def[[j]];listj<-layers[[j]]
DD[,cbind(cc[1],cc[2],"cell_tot")] <- list(NULL)
DD <- merge(DD,cellj,by=(listj))
tmp <- aggregate(DD$adm,by=list(DD$cell,DD$cell_type),sum)
View(DD)
D <- discharge_data
s_min
cc <- c("cell","cell_type")
# Create ID numbers for cells based on layers of decreasing refinement
L <- length(layers)      # Number of layers
cell_def <- lapply(layers, function(x){unique(subset(D, select = x))})
for (l in 1:L) {
cell_def[[l]]$cell <- cumsum((array(1,nrow(cell_def[[l]]))))
cell_def[[l]]$cell_type <- l
}
# Starting with the most refined layer, merge with discharge data.
# Use this cell defn for cells with at least `s_min' events.
# For cells with fewer than `s_min', go on to next level.
cell1<-cell_def[[1]]; list1<-layers[[1]]
# First Layer
DD <- merge(D,cell1,by=(list1))
tmp <- aggregate(DD$adm,by=list(DD$cell,DD$cell_type),sum)
names(tmp) <- c(cc,"cell_tot")
DD <- merge(DD,tmp,by=cc)
D0 <- subset(DD,cell_tot >= s_min)
DD <- subset(DD,cell_tot < s_min)
print(paste0("Layer ","1",": ",nrow(D0)," obs allocated", sep = ""))
j <- 2
cellj<-cell_def[[j]];listj<-layers[[j]]
DD[,cbind(cc[1],cc[2],"cell_tot")] <- list(NULL)
DD <- merge(DD,cellj,by=(listj))
tmp <- aggregate(DD$adm,by=list(DD$cell,DD$cell_type),sum)
names(tmp) <- c(cc,"cell_tot")
DD <- merge(DD,tmp,by=cc)
matched   <- subset(DD,cell_tot >= s_min)
nomatched <- subset(DD,cell_tot < s_min)
print(paste0("Layer ",j,": ",nrow(matched)," obs allocated", sep = ""))
D0 <- rbind(D0,matched)
DD <- nomatched
j <- 3
rm(list=ls())
devtools::load_all()
data(discharge_data, package = "healthcare.antitrust")
discharge_data$adm <- 1
th <- 40
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
rm(list=ls())
data(discharge_data, package = "healthcare.antitrust")
discharge_data$adm <- 1
th <- 40
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
D <- discharge_data
s_min <- th
cc <- c("cell","cell_type")
# Create ID numbers for cells based on layers of decreasing refinement
L <- length(layers)      # Number of layers
cell_def <- lapply(layers, function(x){unique(subset(D, select = x))})
for (l in 1:L) {
cell_def[[l]]$cell <- cumsum((array(1,nrow(cell_def[[l]]))))
cell_def[[l]]$cell_type <- l
}
# Starting with the most refined layer, merge with discharge data.
# Use this cell defn for cells with at least `s_min' events.
# For cells with fewer than `s_min', go on to next level.
cell1<-cell_def[[1]]; list1<-layers[[1]]
# First Layer
DD <- merge(D,cell1,by=(list1))
tmp <- aggregate(DD$adm,by=list(DD$cell,DD$cell_type),sum)
names(tmp) <- c(cc,"cell_tot")
DD <- merge(DD,tmp,by=cc)
D0 <- subset(DD,cell_tot >= s_min)
DD <- subset(DD,cell_tot < s_min)
print(paste0("Layer ","1",": ",nrow(D0)," obs allocated", sep = ""))
j <- 2
L
dim(DD)
rm(list=ls())
devtools::load_all()
data(discharge_data, package = "healthcare.antitrust")
discharge_data$adm <- 1
th <- 40
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
th <- 25
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
th <- 25
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip5")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
th <- 25
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip5")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
th <- 25
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
th <- 25
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip5")
list4 <- c("zip3")
layers <- list(list2, list3, list4)
outList <- cell_defn(discharge_data,th,layers)
th <- 25
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list2 <- c("drg","age","zip5")
list3 <- c("drg","age","zip3")
list4 <- c("zip3")
layers <- list(list2, list4, list3)
outList <- cell_defn(discharge_data,th,layers)
735+465
devtools::build()
devtools::install()
load_all()
devtools::load_all()
package?healthcare.antitrust
?div_calc
package?dplyr
devtools::document()
package?healthcare.antitrust
devtools::load_all()
package?healthcare.antitrust
devtools::document()
?div_calc
package?healthcare.antitrust
?discharge_data
?cell_defn
package?healthcare.antitrust
?help
package?healthcare.antitrust
?cell_defn
devtools::document()
?cell_defn
package?healthcare.antitrust
usethis::use_package_doc()
devtools::document()
package?healthcare.antitrust
package?dplyr
devtools::document()
package?healthcare.antitrust
devtools::document()
package?healthcare.antitrust
package?healthcare.antitrust-package
?healthcare.antitrust-package
?healthcare.antitrust
?dplyr
package?dplyr
package?healthcare.antitrust
package?healthcareantitrust
?healthcare.antitrust
devtools::document()
?healthcare.antitrust
package?dplyr
devtools::document()
?div_calc
package?healthcare.antitrust
?healthcare.antitrust
devtools::document()
?div_calc
?healthcare.antitrust
package?healthcare.antitrust
devtools::document()
?healthcare.antitrust
package?dplyr
package?healthcare.antitrust
devtools::load_all()
?div_calc
?healthcare.antitrust
package?healthcare.antitrust
?roxygen2
package?roxygen2
vignette("rd", package = "roxygen2")
devtools::document()
?healthcare.antitrust
package?healthcare.antitrust
devtools::document()
?healthcare.antitrust
devtools::build()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
data(discharge_data, package = "healthcare.antitrust")
library(healthcare.antitrust)
data(discharge_data, package = "healthcare.antitrust")
data(discharge_data, package = "healthcare.antitrust")
"hosp_id" %in% names(discharge_data)
"hosp_id2" %in% names(discharge_data)
N <- 1200
N_drg <- 4
drg <- sample(N_drg, size = N, replace = TRUE)
age <- sample(c(30,40,50,60), size = N, replace = TRUE)
zip5 <- sample(c(53130,53131,53132), size = N, replace = TRUE, prob = c(.4,.4,.2))
H <- 8
K <- 3
# calculate utilities
util = matrix(0, nrow = N, ncol = H)
drg_val <- matrix(runif(N_drg*H) , nrow = N_drg, ncol = H)
for (h in 1:H) {
util[,h] <-  drg_val[drg,h] + runif(N)
}
hosp_id <- max.col(util)
discharge_data <- data.frame(drg, age, zip5, hosp_id)
discharge_data$Hospital <- paste0("hospital ",hosp_id)
discharge_data$sys_id <- hosp_id
discharge_data$sys_id[discharge_data$hosp_id==2] <- 1
discharge_data$sys_id[discharge_data$hosp_id==4] <- 3
discharge_data$System <- paste0("system ",discharge_data$sys_id)
#save(discharge_data,file="data/discharge_data.RData")
usethis::use_data(discharge_data, overwrite = TRUE)
tabulate(discharge_data$hosp_id)
discharge_data %>%
group_by(drg,age,zip5) %>%
summarize(freq = n())
library(dplyr)
N <- 1200
N_drg <- 4
drg <- sample(N_drg, size = N, replace = TRUE)
age <- sample(c(30,40,50,60), size = N, replace = TRUE)
zip5 <- sample(c(53130,53131,53132), size = N, replace = TRUE, prob = c(.4,.4,.2))
H <- 8
K <- 3
# calculate utilities
util = matrix(0, nrow = N, ncol = H)
drg_val <- matrix(runif(N_drg*H) , nrow = N_drg, ncol = H)
for (h in 1:H) {
util[,h] <-  drg_val[drg,h] + runif(N)
}
hosp_id <- max.col(util)
discharge_data <- data.frame(drg, age, zip5, hosp_id)
discharge_data$Hospital <- paste0("hospital ",hosp_id)
discharge_data$sys_id <- hosp_id
discharge_data$sys_id[discharge_data$hosp_id==2] <- 1
discharge_data$sys_id[discharge_data$hosp_id==4] <- 3
discharge_data$System <- paste0("system ",discharge_data$sys_id)
#save(discharge_data,file="data/discharge_data.RData")
usethis::use_data(discharge_data, overwrite = TRUE)
tabulate(discharge_data$hosp_id)
discharge_data %>%
group_by(drg,age,zip5) %>%
summarize(freq = n())
if ("cell" %in% names(df) = FALSE) {warning('Variable "cell" required in input dataset')}
if (!"cell" %in% names(df)) {warning('Variable "cell" required in input dataset')}
if (!"hosp_id" %in% names(df)) {warning('Variable "hosp_id" required in input dataset')}
if (!"cell" %in% names(D)) {warning('Variable "cell" required in input dataset')}
if (!"hosp_id" %in% names(D)) {warning('Variable "hosp_id" required in input dataset')}
D <- discharge_data
if (!"cell" %in% names(D)) {warning('Variable "cell" required in input dataset')}
if (!"hosp_id" %in% names(D)) {warning('Variable "hosp_id" required in input dataset')}
if (!"cell" %in% names(D)) {warning('Variable "cell" required in input dataset'); stop()}
if (!"hosp_id" %in% names(D)) {warning('Variable "hosp_id" required in input dataset');
stop()}
if (!"cell" %in% names(D)) {warning('Variable "cell" required in input dataset'); stop()}
if (!"hosp_id" %in% names(D)) {warning('Variable "hosp_id" required in input dataset'); stop()}
data(discharge_data, package = "healthcare.antitrust")
library(healthcare.antitrust)
data(discharge_data, package = "healthcare.antitrust")
devtools::load_all()
data(discharge_data, package = "healthcare.antitrust")
library(dplyr)
N <- 1200
N_drg <- 4
drg <- sample(N_drg, size = N, replace = TRUE)
age <- sample(c(30,40,50,60), size = N, replace = TRUE)
zip5 <- sample(c(53130,53131,53132), size = N, replace = TRUE, prob = c(.4,.4,.2))
H <- 8
K <- 3
# calculate utilities
util = matrix(0, nrow = N, ncol = H)
drg_val <- matrix(runif(N_drg*H) , nrow = N_drg, ncol = H)
for (h in 1:H) {
util[,h] <-  drg_val[drg,h] + runif(N)
}
hosp_id <- max.col(util)
discharge_data <- data.frame(drg, age, zip5, hosp_id)
discharge_data$hospital <- paste0("Hospital ",hosp_id)
discharge_data$sys_id <- hosp_id
discharge_data$sys_id[discharge_data$hosp_id==2] <- 1
discharge_data$sys_id[discharge_data$hosp_id==4] <- 3
discharge_data$system <- paste0("System ",discharge_data$sys_id)
#save(discharge_data,file="data/discharge_data.RData")
usethis::use_data(discharge_data, overwrite = TRUE)
tabulate(discharge_data$hosp_id)
discharge_data %>%
group_by(drg,age,zip5) %>%
summarize(freq = n())
rm(list=ls())
devtools::load_all()
data(discharge_data, package = "healthcare.antitrust")
devtools::document()
?div_calc
rm(list=ls())
devtools::build_manual()
devtools::build()
