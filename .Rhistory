}
hosp_id <- max.col(util)
discharge_data <- data.frame(drg, age, zip5, hosp_id)
discharge_data$Hospital <- paste0("Hospital ",hosp_id)
discharge_data$sys_id <- hosp_id
discharge_data$sys_id[discharge_data$hosp_id==2] <- 1
discharge_data$sys_id[discharge_data$hosp_id==4] <- 3
discharge_data$System <- paste0("System ",sys_id)
discharge_data$System <- paste0("System ",discharge_data$sys_id)
save(discharge_data,file="data/discharge_data.RData")
tabulate(discharge_data$choice)
tabulate(discharge_data$hosp_id)
discharge_data %>%
group_by(drg,age,zip5) %>%
summarize(freq = n())
library(dplyr)
discharge_data %>%
group_by(drg,age,zip5) %>%
summarize(freq = n())
rm(list=ls())
load('data/discharge_data.RData')
list1 <- c("drg","age","zip5")
layers <- list(list1)
thrs <- 15
discharge_data$adm <- 1
outList <- cell_defn(discharge_data,thrs,layers)
D0 <- as.data.frame(outList[1])
print(nrow(D0))
print(nrow(discharge_data))
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list1 <- c("drg","age","zip5")
list2 <- c("zip3")
layers <- list(list1, list2)
outList <- cell_defn(discharge_data,thrs,layers)
D0 <- as.data.frame(outList[1])
print(nrow(D0))
print(nrow(discharge_data))
D0$party_ind <- 0
D0$party_ind[D0$hosp_id==1] <- 1
D0$party_ind[D0$hosp_id==5] <- 1
View(D0)
out <- div_calc(D0)
View(out)
devtools::load_all()
load('data/discharge_data.RData')
thrs <- 15
discharge_data$adm <- 1
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list1 <- c("drg","age","zip5")
list2 <- c("zip3")
layers <- list(list1, list2)
outList <- cell_defn(discharge_data,thrs,layers)
D0 <- as.data.frame(outList[1])
print(nrow(D0))
print(nrow(discharge_data))
D0$party_ind <- 0
D0$party_ind[D0$hosp_id==1] <- 1
D0$party_ind[D0$hosp_id==5] <- 1
out <- div_calc(D0)
View(out)
D <- discharge_data
check <- unique(subset(D,select=c(hosp_id,Hospital)))
if (length(unique(check$hosp_id)) != length(check$hosp_id)) {warning('Error: hosp_id associated with multiple hospital names')}
#if (length(unique(check$Hospital)) != length(check$Hospital)) {warning('Error: hospital name associated with multiple hosp_ids')}
iter <- 0
D$party_sys_id <- D$party_ind*D$sys_id
party_sys_list <- unique(D$party_sys_id[D$party_sys_id > 0])
for (m in party_sys_list) {
# Calculate cell-specific hospital diversion ratios
y_hosp_cell = aggregate(D$adm,by=list(D$cell,D$hosp_id,D$Hospital,D$party_sys_id),sum)
names(y_hosp_cell) <- c("cell","hosp_id","Hospital","party_sys_id","N_h")
y_hosp_cell$N <- ave(y_hosp_cell$N_h,y_hosp_cell$cell, FUN = sum)
y_hosp_cell$share_h <- y_hosp_cell$N_h/y_hosp_cell$N
y_hosp_cell$share_m <- ave(y_hosp_cell$share_h,y_hosp_cell$cell, y_hosp_cell$party_sys_id, FUN = sum)
y_hosp_cell$share_m[y_hosp_cell$party_sys_id != m] <- 0
y_hosp_cell$share_m <- ave(y_hosp_cell$share_m,y_hosp_cell$cell, FUN = max)
y_hosp_cell$share_h[y_hosp_cell$party_sys_id == m] <- 0 # set share to zero for system hospitals
y_hosp_cell$div <- y_hosp_cell$share_h/(1-y_hosp_cell$share_m)
# Calculate predicted hospital-cell admissions after hospital k exclusion
system_hosp <- sort(unique(y_hosp_cell$hosp_id[y_hosp_cell$party_sys_id == m]))
for (k in system_hosp) {
print("Hosp Id")
print(k)
iter <- iter + 1
y_hosp_cell$N_k <- 0
y_hosp_cell$N_k[y_hosp_cell$hosp_id == k] <- y_hosp_cell$N_h[y_hosp_cell$hosp_id == k]
y_hosp_cell$N_k <- ave(y_hosp_cell$N_k,y_hosp_cell$cell, FUN = max)
y_hosp_cell$N_h_predict <- y_hosp_cell$N_h + y_hosp_cell$N_k*y_hosp_cell$div
y_hosp_cell$N_h_predict[y_hosp_cell$party_sys_id == m] <- 0
# Sum across cells
y_hosp = aggregate(D$adm,by=list(D$hosp_id,D$Hospital,D$party_sys_id),sum)
names(y_hosp) <- c("hosp_id","Hospital","party_sys_id","N_h")
y_hosp$N_k <- 0
y_hosp$N_k[y_hosp$hosp_id == k] <- y_hosp$N_h[y_hosp$hosp_id == k]
y_hosp$N_k <- max(y_hosp$N_k)
temp <- aggregate(y_hosp_cell$N_h_predict,by=list(y_hosp_cell$hosp_id),sum)
names(temp) <- c("hosp_id","N_h_predict")
# Calculate hospital diversion ratios
y_hosp <- merge(y_hosp,temp)
y_hosp$div <- (y_hosp$N_h_predict-y_hosp$N_h)/y_hosp$N_k
y_hosp$div[y_hosp$party_sys_id == m] <- NA
print("Total Diversion")
print(sum(y_hosp$div, na.rm = TRUE))
if (iter == 1) {out <- subset(y_hosp, select=c(hosp_id,Hospital,party_sys_id,N_h))}
out[,paste0("div_",m,"_",k)] <- y_hosp$div
}
}
View(out)
D <- D0
check <- unique(subset(D,select=c(hosp_id,Hospital)))
if (length(unique(check$hosp_id)) != length(check$hosp_id)) {warning('Error: hosp_id associated with multiple hospital names')}
#if (length(unique(check$Hospital)) != length(check$Hospital)) {warning('Error: hospital name associated with multiple hosp_ids')}
iter <- 0
D$party_sys_id <- D$party_ind*D$sys_id
party_sys_list <- unique(D$party_sys_id[D$party_sys_id > 0])
for (m in party_sys_list) {
# Calculate cell-specific hospital diversion ratios
y_hosp_cell = aggregate(D$adm,by=list(D$cell,D$hosp_id,D$Hospital,D$party_sys_id),sum)
names(y_hosp_cell) <- c("cell","hosp_id","Hospital","party_sys_id","N_h")
y_hosp_cell$N <- ave(y_hosp_cell$N_h,y_hosp_cell$cell, FUN = sum)
y_hosp_cell$share_h <- y_hosp_cell$N_h/y_hosp_cell$N
y_hosp_cell$share_m <- ave(y_hosp_cell$share_h,y_hosp_cell$cell, y_hosp_cell$party_sys_id, FUN = sum)
y_hosp_cell$share_m[y_hosp_cell$party_sys_id != m] <- 0
y_hosp_cell$share_m <- ave(y_hosp_cell$share_m,y_hosp_cell$cell, FUN = max)
y_hosp_cell$share_h[y_hosp_cell$party_sys_id == m] <- 0 # set share to zero for system hospitals
y_hosp_cell$div <- y_hosp_cell$share_h/(1-y_hosp_cell$share_m)
# Calculate predicted hospital-cell admissions after hospital k exclusion
system_hosp <- sort(unique(y_hosp_cell$hosp_id[y_hosp_cell$party_sys_id == m]))
for (k in system_hosp) {
print("Hosp Id")
print(k)
iter <- iter + 1
y_hosp_cell$N_k <- 0
y_hosp_cell$N_k[y_hosp_cell$hosp_id == k] <- y_hosp_cell$N_h[y_hosp_cell$hosp_id == k]
y_hosp_cell$N_k <- ave(y_hosp_cell$N_k,y_hosp_cell$cell, FUN = max)
y_hosp_cell$N_h_predict <- y_hosp_cell$N_h + y_hosp_cell$N_k*y_hosp_cell$div
y_hosp_cell$N_h_predict[y_hosp_cell$party_sys_id == m] <- 0
# Sum across cells
y_hosp = aggregate(D$adm,by=list(D$hosp_id,D$Hospital,D$party_sys_id),sum)
names(y_hosp) <- c("hosp_id","Hospital","party_sys_id","N_h")
y_hosp$N_k <- 0
y_hosp$N_k[y_hosp$hosp_id == k] <- y_hosp$N_h[y_hosp$hosp_id == k]
y_hosp$N_k <- max(y_hosp$N_k)
temp <- aggregate(y_hosp_cell$N_h_predict,by=list(y_hosp_cell$hosp_id),sum)
names(temp) <- c("hosp_id","N_h_predict")
# Calculate hospital diversion ratios
y_hosp <- merge(y_hosp,temp)
y_hosp$div <- (y_hosp$N_h_predict-y_hosp$N_h)/y_hosp$N_k
y_hosp$div[y_hosp$party_sys_id == m] <- NA
print("Total Diversion")
print(sum(y_hosp$div, na.rm = TRUE))
if (iter == 1) {out <- subset(y_hosp, select=c(hosp_id,Hospital,party_sys_id,N_h))}
out[,paste0("div_",m,"_",k)] <- y_hosp$div
}
}
party_sys_list
View(out)
View(D0)
party_sys_list
D0$party_ind[D0$hosp_id==1] <- 1
D0$party_ind[D0$hosp_id==2] <- 1
D0$party_ind[D0$hosp_id==5] <- 1
out <- div_calc(D0)
View(out)
rm(list=ls())
devtools::load_all()
load('data/discharge_data.RData')
list1 <- c("drg","age","zip5")
layers <- list(list1)
thrs <- 15
discharge_data$adm <- 1
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list1 <- c("drg","age","zip5")
list2 <- c("zip3")
layers <- list(list1, list2)
outList <- cell_defn(discharge_data,thrs,layers)
D0 <- as.data.frame(outList[1])
print(nrow(D0))
print(nrow(discharge_data))
D0$party_ind <- 0
D0$party_ind[D0$hosp_id==1] <- 1
D0$party_ind[D0$hosp_id==2] <- 1
D0$party_ind[D0$hosp_id==5] <- 1
out <- div_calc(D0)
View(out)
D <- D0
check <- unique(subset(D,select=c(hosp_id,Hospital)))
if (length(unique(check$hosp_id)) != length(check$hosp_id)) {warning('Error: hosp_id associated with multiple hospital names')}
#if (length(unique(check$Hospital)) != length(check$Hospital)) {warning('Error: hospital name associated with multiple hosp_ids')}
iter <- 0
D$party_sys_id <- D$party_ind*D$sys_id
party_sys_list <- unique(D$party_sys_id[D$party_sys_id > 0])
for (m in party_sys_list) {
# Calculate cell-specific hospital diversion ratios
y_hosp_cell = aggregate(D$adm,by=list(D$cell,D$hosp_id,D$Hospital,D$party_sys_id),sum)
names(y_hosp_cell) <- c("cell","hosp_id","Hospital","party_sys_id","N_h")
y_hosp_cell$N <- ave(y_hosp_cell$N_h,y_hosp_cell$cell, FUN = sum)
y_hosp_cell$share_h <- y_hosp_cell$N_h/y_hosp_cell$N
y_hosp_cell$share_m <- ave(y_hosp_cell$share_h,y_hosp_cell$cell, y_hosp_cell$party_sys_id, FUN = sum)
y_hosp_cell$share_m[y_hosp_cell$party_sys_id != m] <- 0
y_hosp_cell$share_m <- ave(y_hosp_cell$share_m,y_hosp_cell$cell, FUN = max)
y_hosp_cell$share_h[y_hosp_cell$party_sys_id == m] <- 0 # set share to zero for system hospitals
y_hosp_cell$div <- y_hosp_cell$share_h/(1-y_hosp_cell$share_m)
# Calculate predicted hospital-cell admissions after hospital k exclusion
system_hosp <- sort(unique(y_hosp_cell$hosp_id[y_hosp_cell$party_sys_id == m]))
for (k in system_hosp) {
print("Hosp Id")
print(k)
iter <- iter + 1
y_hosp_cell$N_k <- 0
y_hosp_cell$N_k[y_hosp_cell$hosp_id == k] <- y_hosp_cell$N_h[y_hosp_cell$hosp_id == k]
y_hosp_cell$N_k <- ave(y_hosp_cell$N_k,y_hosp_cell$cell, FUN = max)
y_hosp_cell$N_h_predict <- y_hosp_cell$N_h + y_hosp_cell$N_k*y_hosp_cell$div
y_hosp_cell$N_h_predict[y_hosp_cell$party_sys_id == m] <- 0
# Sum across cells
y_hosp = aggregate(D$adm,by=list(D$hosp_id,D$Hospital,D$party_sys_id),sum)
names(y_hosp) <- c("hosp_id","Hospital","party_sys_id","N_h")
y_hosp$N_k <- 0
y_hosp$N_k[y_hosp$hosp_id == k] <- y_hosp$N_h[y_hosp$hosp_id == k]
y_hosp$N_k <- max(y_hosp$N_k)
temp <- aggregate(y_hosp_cell$N_h_predict,by=list(y_hosp_cell$hosp_id),sum)
names(temp) <- c("hosp_id","N_h_predict")
# Calculate hospital diversion ratios
y_hosp <- merge(y_hosp,temp)
y_hosp$div <- (y_hosp$N_h_predict-y_hosp$N_h)/y_hosp$N_k
y_hosp$div[y_hosp$party_sys_id == m] <- NA
print("Total Diversion")
print(sum(y_hosp$div, na.rm = TRUE))
if (iter == 1) {out <- subset(y_hosp, select=c(hosp_id,Hospital,party_sys_id,N_h))}
out[,paste0("div_",m,"_",k)] <- y_hosp$div
}
}
View(out)
sum(out$div_1_1)
sum(out$div_1_1, na.rm = TRUE)
sum(out$div_1_2, na.rm = TRUE)
sum(out$div_5_5, na.rm = TRUE)
y_hosp$div
View(out)
View(out)
system_hosp
party_sys_list
system_hosp
check <- unique(subset(D,select=c(hosp_id,Hospital)))
if (length(unique(check$hosp_id)) != length(check$hosp_id)) {warning('Error: hosp_id associated with multiple hospital names')}
#if (length(unique(check$Hospital)) != length(check$Hospital)) {warning('Error: hospital name associated with multiple hosp_ids')}
iter <- 0
D$party_sys_id <- D$party_ind*D$sys_id
party_sys_list <- unique(D$party_sys_id[D$party_sys_id > 0])
for (m in party_sys_list) {
# Calculate cell-specific hospital diversion ratios
y_hosp_cell = aggregate(D$adm,by=list(D$cell,D$hosp_id,D$Hospital,D$party_sys_id),sum)
names(y_hosp_cell) <- c("cell","hosp_id","Hospital","party_sys_id","N_h")
y_hosp_cell$N <- ave(y_hosp_cell$N_h,y_hosp_cell$cell, FUN = sum)
y_hosp_cell$share_h <- y_hosp_cell$N_h/y_hosp_cell$N
y_hosp_cell$share_m <- ave(y_hosp_cell$share_h,y_hosp_cell$cell, y_hosp_cell$party_sys_id, FUN = sum)
y_hosp_cell$share_m[y_hosp_cell$party_sys_id != m] <- 0
y_hosp_cell$share_m <- ave(y_hosp_cell$share_m,y_hosp_cell$cell, FUN = max)
y_hosp_cell$share_h[y_hosp_cell$party_sys_id == m] <- 0 # set share to zero for system hospitals
y_hosp_cell$div <- y_hosp_cell$share_h/(1-y_hosp_cell$share_m)
# Calculate predicted hospital-cell admissions after hospital k exclusion
system_hosp <- sort(unique(y_hosp_cell$hosp_id[y_hosp_cell$party_sys_id == m]))
for (k in system_hosp) {
print("Hosp Id")
print(k)
iter <- iter + 1
y_hosp_cell$N_k <- 0
y_hosp_cell$N_k[y_hosp_cell$hosp_id == k] <- y_hosp_cell$N_h[y_hosp_cell$hosp_id == k]
y_hosp_cell$N_k <- ave(y_hosp_cell$N_k,y_hosp_cell$cell, FUN = max)
y_hosp_cell$N_h_predict <- y_hosp_cell$N_h + y_hosp_cell$N_k*y_hosp_cell$div
y_hosp_cell$N_h_predict[y_hosp_cell$party_sys_id == m] <- 0
# Sum across cells
y_hosp = aggregate(D$adm,by=list(D$hosp_id,D$Hospital,D$party_sys_id),sum)
names(y_hosp) <- c("hosp_id","Hospital","party_sys_id","N_h")
y_hosp$N_k <- 0
y_hosp$N_k[y_hosp$hosp_id == k] <- y_hosp$N_h[y_hosp$hosp_id == k]
y_hosp$N_k <- max(y_hosp$N_k)
temp <- aggregate(y_hosp_cell$N_h_predict,by=list(y_hosp_cell$hosp_id),sum)
names(temp) <- c("hosp_id","N_h_predict")
# Calculate hospital diversion ratios
y_hosp <- merge(y_hosp,temp)
y_hosp$div <- (y_hosp$N_h_predict-y_hosp$N_h)/y_hosp$N_k
y_hosp$div[y_hosp$party_sys_id == m] <- NA
print("Total Diversion")
print(sum(y_hosp$div, na.rm = TRUE))
if (iter == 1) {out <- subset(y_hosp, select=c(hosp_id,Hospital,party_sys_id,N_h))}
#out[,paste0("div_",m,"_",k)] <- y_hosp$div
out[,paste0("div_h_",k)] <- y_hosp$div
}
}
View(out)
check <- unique(subset(D,select=c(hosp_id,Hospital)))
if (length(unique(check$hosp_id)) != length(check$hosp_id)) {warning('Error: hosp_id associated with multiple hospital names')}
#if (length(unique(check$Hospital)) != length(check$Hospital)) {warning('Error: hospital name associated with multiple hosp_ids')}
iter <- 0
D$party_sys_id <- D$party_ind*D$sys_id
party_sys_list <- unique(D$party_sys_id[D$party_sys_id > 0])
for (m in party_sys_list) {
# Calculate cell-specific hospital diversion ratios
y_hosp_cell = aggregate(D$adm,by=list(D$cell,D$hosp_id,D$Hospital,D$party_sys_id),sum)
names(y_hosp_cell) <- c("cell","hosp_id","Hospital","party_sys_id","N_h")
y_hosp_cell$N <- ave(y_hosp_cell$N_h,y_hosp_cell$cell, FUN = sum)
y_hosp_cell$share_h <- y_hosp_cell$N_h/y_hosp_cell$N
y_hosp_cell$share_m <- ave(y_hosp_cell$share_h,y_hosp_cell$cell, y_hosp_cell$party_sys_id, FUN = sum)
y_hosp_cell$share_m[y_hosp_cell$party_sys_id != m] <- 0
y_hosp_cell$share_m <- ave(y_hosp_cell$share_m,y_hosp_cell$cell, FUN = max)
y_hosp_cell$share_h[y_hosp_cell$party_sys_id == m] <- 0 # set share to zero for system hospitals
y_hosp_cell$div <- y_hosp_cell$share_h/(1-y_hosp_cell$share_m)
# Calculate predicted hospital-cell admissions after hospital k exclusion
system_hosp <- sort(unique(y_hosp_cell$hosp_id[y_hosp_cell$party_sys_id == m]))
for (k in system_hosp) {
print("Hosp Id")
print(k)
iter <- iter + 1
y_hosp_cell$N_k <- 0
y_hosp_cell$N_k[y_hosp_cell$hosp_id == k] <- y_hosp_cell$N_h[y_hosp_cell$hosp_id == k]
y_hosp_cell$N_k <- ave(y_hosp_cell$N_k,y_hosp_cell$cell, FUN = max)
y_hosp_cell$N_h_predict <- y_hosp_cell$N_h + y_hosp_cell$N_k*y_hosp_cell$div
y_hosp_cell$N_h_predict[y_hosp_cell$party_sys_id == m] <- 0
# Sum across cells
y_hosp = aggregate(D$adm,by=list(D$hosp_id,D$Hospital,D$party_sys_id),sum)
names(y_hosp) <- c("hosp_id","Hospital","party_sys_id","N_h")
y_hosp$N_k <- 0
y_hosp$N_k[y_hosp$hosp_id == k] <- y_hosp$N_h[y_hosp$hosp_id == k]
y_hosp$N_k <- max(y_hosp$N_k)
temp <- aggregate(y_hosp_cell$N_h_predict,by=list(y_hosp_cell$hosp_id),sum)
names(temp) <- c("hosp_id","N_h_predict")
# Calculate hospital diversion ratios
y_hosp <- merge(y_hosp,temp)
y_hosp$div <- (y_hosp$N_h_predict-y_hosp$N_h)/y_hosp$N_k
y_hosp$div[y_hosp$party_sys_id == m] <- NA
print("Total Diversion")
print(sum(y_hosp$div, na.rm = TRUE))
if (iter == 1) {out <- subset(y_hosp, select=c(hosp_id,Hospital,party_sys_id,N_h))}
#out[,paste0("div_",m,"_",k)] <- y_hosp$div
out[,paste0("div_from",k)] <- y_hosp$div
}
}
View(out)
devtools::load_all()
devtools::build_vignettes()
?cell_defn
library(healthcare.antitrust)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(healthcare.antitrust)
load('data/discharge_data.RData')
devtools::install()
devtools::load_all()
rm(list=ls())
load('discharge_data.RData')
load('data/discharge_data.RData')
load('data\discharge_data.RData')
devtools::load_all()
load('data/discharge_data.RData')
N <- 1200
N_drg <- 4
drg <- sample(N_drg, size = N, replace = TRUE)
age <- sample(c(30,40,50,60), size = N, replace = TRUE)
zip5 <- sample(c(53130,53131,53132), size = N, replace = TRUE, prob = c(.4,.4,.2))
H <- 8
K <- 3
# calculate utilities
util = matrix(0, nrow = N, ncol = H)
drg_val <- matrix(runif(N_drg*H) , nrow = N_drg, ncol = H)
for (h in 1:H) {
util[,h] <-  drg_val[drg,h] + runif(N)
}
hosp_id <- max.col(util)
discharge_data <- data.frame(drg, age, zip5, hosp_id)
discharge_data$Hospital <- paste0("Hospital ",hosp_id)
discharge_data$sys_id <- hosp_id
discharge_data$sys_id[discharge_data$hosp_id==2] <- 1
discharge_data$sys_id[discharge_data$hosp_id==4] <- 3
discharge_data$System <- paste0("System ",discharge_data$sys_id)
save(discharge_data,file="data/discharge_data.RData")
devtools::use_data(discharge_data)
N <- 1200
N_drg <- 4
drg <- sample(N_drg, size = N, replace = TRUE)
age <- sample(c(30,40,50,60), size = N, replace = TRUE)
zip5 <- sample(c(53130,53131,53132), size = N, replace = TRUE, prob = c(.4,.4,.2))
H <- 8
K <- 3
# calculate utilities
util = matrix(0, nrow = N, ncol = H)
drg_val <- matrix(runif(N_drg*H) , nrow = N_drg, ncol = H)
for (h in 1:H) {
util[,h] <-  drg_val[drg,h] + runif(N)
}
hosp_id <- max.col(util)
discharge_data <- data.frame(drg, age, zip5, hosp_id)
discharge_data$Hospital <- paste0("Hospital ",hosp_id)
discharge_data$sys_id <- hosp_id
discharge_data$sys_id[discharge_data$hosp_id==2] <- 1
discharge_data$sys_id[discharge_data$hosp_id==4] <- 3
discharge_data$System <- paste0("System ",discharge_data$sys_id)
#save(discharge_data,file="data/discharge_data.RData")
usethis::use_data(discharge_data, overwrite = TRUE)
tabulate(discharge_data$hosp_id)
discharge_data %>%
group_by(drg,age,zip5) %>%
summarize(freq = n())
rm(list=ls())
load('data/discharge_data.rda')
list1 <- c("drg","age","zip5")
layers <- list(list1)
thrs <- 15
discharge_data$adm <- 1
outList <- cell_defn(discharge_data,thrs,layers)
D0 <- as.data.frame(outList[1])
print(nrow(D0))
print(nrow(discharge_data))
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list1 <- c("drg","age","zip5")
list2 <- c("zip3")
layers <- list(list1, list2)
outList <- cell_defn(discharge_data,thrs,layers)
D0 <- as.data.frame(outList[1])
print(nrow(D0))
print(nrow(discharge_data))
D0$party_ind <- 0
D0$party_ind[D0$hosp_id==1] <- 1
D0$party_ind[D0$hosp_id==2] <- 1
D0$party_ind[D0$hosp_id==5] <- 1
out <- div_calc(D0)
devtools::install()
rm(list=ls())
devtools::install()
data('discharge_data.rda', package = 'healthcare.antitrust')
data('data/discharge_data.rda', package = 'healthcare.antitrust')
library(healthcare.antitrust)
data('data/discharge_data.rda', package = 'healthcare.antitrust')
data('discharge_data.rda', package = 'healthcare.antitrust')
devtools::load_all()
data('discharge_data.rda')
load('data/discharge_data.rda')
devtools::install()
devtools::install()
devtools::document
?cell_defn
?discharge_data
devtools::load_all()
?div_calc
?discharge_data
devtools::document()
devtools::load_all()
data(discharge_data.rda, package = "healthcare.antitrust")
?devtools
?load_all
?cell_defn
?discharge_data
?use_data
?ggplot2
?div_cal
?div_calc
?attach
?data
data()
data(discharge_data)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(healthcare.antitrust)
data(discharge_data, package = "healthcare.antitrust")
list1 <- c("drg","age","zip5")
layers <- list(list1)
thrs <- 15
discharge_data$adm <- 1
outList <- cell_defn(discharge_data,thrs,layers)
D0 <- as.data.frame(outList[1])
print(nrow(D0))
print(nrow(discharge_data))
discharge_data$zip3 <- floor(discharge_data$zip5/100)
list1 <- c("drg","age","zip5")
list2 <- c("zip3")
layers <- list(list1, list2)
outList <- cell_defn(discharge_data,thrs,layers)
D0 <- as.data.frame(outList[1])
print(nrow(D0))
print(nrow(discharge_data))
D0$party_ind <- 0
D0$party_ind[D0$hosp_id==1] <- 1
D0$party_ind[D0$hosp_id==2] <- 1
D0$party_ind[D0$hosp_id==5] <- 1
out <- div_calc(D0)
View(out)
sum(out$div_from_1)
sum(out$div_from_1, rm.na)
?sum
sum(out$div_from_1, na.rm = TRUE)
devtools::build_vignettes()
devtools::check()
devtools::check()
file.exists("~/.ssh/id_rsa.pub")
?div_calc
devtools::load_all()
?div_calc
devtools::load_all()
?cell_defn
devtools::document()
?div_calc
?cell_defn
devtools::load_all()
?div_calc
devtools::document()
devtools::load_all()
?cell_defn
?div_calc
